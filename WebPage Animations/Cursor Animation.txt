<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fluid Smoke Trail Effect</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      height: 100%;
      background: #111;
      font-family: 'Arial', sans-serif;
      color: #eee;
    }

    canvas {
      display: block;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 0;
    }

    .content {
      position: relative;
      z-index: 1;
      padding: 60px;
      max-width: 800px;
      margin: 0 auto;
      text-align: center;
    }

    h1 {
      font-size: 3em;
      margin-bottom: 20px;
    }

    p {
      font-size: 1.2em;
      line-height: 1.5;
      margin-bottom: 40px;
    }

    button {
      padding: 15px 30px;
      font-size: 1em;
      color: #fff;
      background: #444;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s;
    }

    button:hover {
      background: #666;
    }

    .section {
      margin: 60px 0;
    }

    .contact-form input,
    .contact-form textarea {
      width: 100%;
      padding: 15px;
      margin: 10px 0;
      border-radius: 8px;
      border: 1px solid #444;
      background: #222;
      color: #fff;
      font-size: 1em;
    }

    .contact-form button {
      padding: 15px 30px;
      background: #444;
      border-radius: 8px;
      color: #fff;
      font-size: 1.2em;
      cursor: pointer;
      border: none;
      transition: background 0.3s;
    }

    .contact-form button:hover {
      background: #666;
    }

    footer {
      text-align: center;
      padding: 20px;
      background: #222;
      color: #aaa;
      font-size: 1em;
    }
  </style>
</head>
<body>

  <canvas id="smokeCanvas"></canvas>

  <div class="content">
    <h1>Welcome to My Website</h1>
    <p>This is a demonstration of a subtle, smokey cursor trail effect. Move your cursor around to see the mist follow you, giving the page an ethereal feel without being too distracting.</p>
    <button>Click Me</button>
  </div>

  <div class="section">
    <h2>About Us</h2>
    <p>We are a creative agency that specializes in bringing ideas to life. Our team is dedicated to providing the best services to our clients with innovative solutions. Explore our website to learn more about our services, projects, and how we can help you achieve your goals.</p>
  </div>

  <div class="section">
    <h2>Contact Us</h2>
    <form class="contact-form">
      <input type="text" name="name" placeholder="Your Name" required />
      <input type="email" name="email" placeholder="Your Email" required />
      <textarea name="message" rows="4" placeholder="Your Message" required></textarea>
      <button type="submit">Send Message</button>
    </form>
  </div>

  <footer>
    <p>&copy; 2025 My Creative Agency. All rights reserved.</p>
  </footer>

  <script>
    const canvas = document.getElementById('smokeCanvas');
    const ctx = canvas.getContext('2d');

    let width = window.innerWidth;
    let height = window.innerHeight;
    canvas.width = width;
    canvas.height = height;

    window.addEventListener('resize', () => {
      width = window.innerWidth;
      height = window.innerHeight;
      canvas.width = width;
      canvas.height = height;
    });

    let mouse = { x: width / 2, y: height / 2 };
    let lastMouse = { x: mouse.x, y: mouse.y };
    let moving = false;

    const particles = [];
    const maxParticles = 400;

    let globalHue = 0;

    document.addEventListener('mousemove', (e) => {
      mouse.x = e.clientX;
      mouse.y = e.clientY;
      moving = true;

      clearTimeout(movementTimeout);
      movementTimeout = setTimeout(() => {
        moving = false;
      }, 50);
    });

    let movementTimeout;

    class Particle {
      constructor(x, y, angle, hue) {
        const spread = 0.5;
        const speed = Math.random() * 0.5 + 0.2;

        this.x = x;
        this.y = y;
        this.size = Math.random() * 30 + 20;
        this.alpha = Math.random() * 0.04 + 0.01;
        this.life = 0;

        this.speedX = Math.cos(angle + (Math.random() - 0.5) * spread) * speed;
        this.speedY = Math.sin(angle + (Math.random() - 0.5) * spread) * speed;

        this.rotation = Math.random() * 360;
        this.rotationSpeed = Math.random() * 0.5 - 0.25;

        this.hue = hue;
      }

      update() {
        this.life++;
        this.x += this.speedX;
        this.y += this.speedY;
        this.rotation += this.rotationSpeed;
        this.alpha *= 0.98;
        this.hue += 0.2;
      }

      draw() {
        ctx.save();
        ctx.translate(this.x, this.y);
        ctx.rotate(this.rotation * Math.PI / 180);
        ctx.globalAlpha = this.alpha;

        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, this.size);
        gradient.addColorStop(0, `hsla(${this.hue}, 50%, 50%, 0.2)`);
        gradient.addColorStop(1, `hsla(${this.hue}, 50%, 50%, 0)`);

        ctx.fillStyle = gradient;
        ctx.beginPath();
        ctx.arc(0, 0, this.size, 0, Math.PI * 2);
        ctx.fill();

        ctx.restore();
      }
    }

    function animate() {
      globalHue = (globalHue + 0.5) % 360;

      ctx.fillStyle = 'rgba(0, 0, 0, 0.03)';
      ctx.fillRect(0, 0, width, height);

      if (moving) {
        const dx = mouse.x - lastMouse.x;
        const dy = mouse.y - lastMouse.y;
        const angle = Math.atan2(dy, dx);

        const speed = Math.sqrt(dx * dx + dy * dy);
        const emitCount = Math.min(6, Math.max(1, speed / 5));

        for (let i = 0; i < emitCount; i++) {
          if (particles.length < maxParticles) {
            particles.push(new Particle(mouse.x, mouse.y, angle, globalHue));
          }
        }

        lastMouse.x = mouse.x;
        lastMouse.y = mouse.y;
      }

      for (let i = 0; i < particles.length; i++) {
        const p = particles[i];
        p.update();
        p.draw();

        if (p.alpha <= 0.005) {
          particles.splice(i, 1);
          i--;
        }
      }

      requestAnimationFrame(animate);
    }

    animate();
  </script>

</body>
</html>
